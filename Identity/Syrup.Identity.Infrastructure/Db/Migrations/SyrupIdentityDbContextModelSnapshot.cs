// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Syrup.Identity.Infrastructure.Db;

#nullable disable

namespace Syrup.Identity.Infrastructure.Db.Migrations
{
    [DbContext(typeof(SyrupIdentityDbContext))]
    partial class SyrupIdentityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Syrup.Identity.Core.Db.Entities.RefreshSession", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("RefreshSession_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshSession", (string)null);
                });

            modelBuilder.Entity("Syrup.Identity.Core.Db.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("AboutMyself")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RegistrationDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id")
                        .HasName("User_pkey");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Syrup.Identity.Core.Db.Entities.RefreshSession", b =>
                {
                    b.HasOne("Syrup.Identity.Core.Db.Entities.User", "User")
                        .WithMany("RefreshSessions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("RefreshSession_UserId_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Syrup.Identity.Core.Db.Entities.User", b =>
                {
                    b.Navigation("RefreshSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
